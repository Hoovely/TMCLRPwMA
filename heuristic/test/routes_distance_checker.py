import math

coordi = [[0,0],[12, 24], [12, 24], [37, 23], [35, 6], [5, 8], [4, 20], [8, 31], [29, 43], [18, 39], [19, 47], [31, 24], [38, 50], [33, 21], [2, 27], [1, 12], [26, 20], [20, 33], 
[15, 46], [20, 26], [17, 19], [15, 12], [5, 30], [13, 40], [38, 5], [9, 40], [16, 8]]
# coordi = [[0, 0], [2, 10], [18, 44], [49, 8], [24, 29], [18, 24], [14, 12], [4, 39], [32, 30], [7, 29], [40, 48], [12, 38], [32, 17], [29, 12], [25, 20], [2, 30], [31, 46], [5, 13], [13, 36], [38, 6], [29, 11], [38, 47], [9, 47], [11, 18], [17, 31], [19, 6], [12, 7], [5, 14], [40, 36], [9, 45], [24, 43], [48, 45], [50, 13], [8, 43], [42, 23], [43, 14], [43, 6], [49, 4], [35, 41], [31, 42], [19, 24], [26, 29], [43, 47], [37, 36], [30, 3], [8, 34], [18, 40], [40, 10], [4, 27], [24, 26], [41, 17], [36, 22], [6, 6], [39, 40], [18, 29], [20, 3], [27, 3], [8, 26], [13, 37], [9, 6], [3, 28], [5, 50], [5, 28], [40, 5], [16, 28], [46, 41], [36, 46], [50, 47], [29, 41], [31, 2], [30, 11], [44, 17], [1, 3], [25, 26], [49, 11], [34, 6], [30, 12], [15, 17], [30, 40], [16, 35], [31, 42], [4, 17], [3, 50], [25, 33], [43, 30], [30, 38], [37, 49], [26, 30], [21, 47], [22, 8], [22, 17], [29, 43], [3, 42], [33, 8], [31, 20], [44, 32], [14, 39], [6, 35], [9, 34], [7, 1], [49, 32], [22, 1], [50, 21], [45, 11], [36, 45], [25, 4], [50, 18], [21, 50], [32, 
# 49], [38, 1], [43, 28], [21, 4], [44, 5]]

service = [0, 0, 0, 0, 0, 0, 34, 7, 25, 8, 8, 26, 13, 5, 21, 32, 13, 15, 18, 33, 28, 9, 22, 19, 2, 8, 0]
# service = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 8, 8, 26, 13, 5, 21, 32, 13, 15, 18, 33, 28, 9, 22, 19, 5, 20, 24, 7, 18, 22, 18, 24, 31, 21, 28, 9, 7, 15, 10, 8, 32, 18, 26, 32, 33, 30, 35, 17, 7, 24, 6, 15, 20, 31, 10, 26, 24, 11, 17, 26, 31, 28, 5, 23, 8, 10, 29, 11, 33, 17, 24, 6, 32, 16, 21, 13, 11, 16, 22, 13, 32, 9, 14, 24, 7, 14, 19, 25, 6, 16, 22, 
# 6, 30, 32, 6, 25, 16, 13, 10, 7, 3, 7, 11, 3, 12, 7, 4, 5, 0, 0]

# demand = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 3, 1, 2, 1, 1, 2, 3, 3, 2, 1, 1, 3, 2, 3, 3, 3, 1, 3, 1, 3, 2, 2, 1, 2, 1, 1, 2, 2, 3, 1, 1, 1, 1, 3, 2, 1, 1, 2, 1, 2, 3, 1, 3, 1, 3, 3, 1, 2, 3, 2, 3, 1, 2, 3, 1, 3, 3, 2, 1, 2, 2, 1, 3, 2, 3, 2, 3, 3, 1, 3, 2, 1, 3, 3, 3, 2, 3, 3, 1, 3, 3, 3, 1, 2, 3, 1, 3, 3, 1, 2, 1, 3, 1, 1, 1, 2, 1, 0, 0]

routes = [2, 6, 2]

# capsum = 0
# for city in routes:
#     capsum += demand[city]
# print(f'Demand Sum: {capsum}')

routes_length = len(routes)
total_dis = 0
for idx, current_node in enumerate(routes):
    if idx+1 < routes_length: next_node = routes[idx+1]
    else: break

    dis = math.sqrt((coordi[current_node][0]-coordi[next_node][0])**2 + (coordi[current_node][1]-coordi[next_node][1])**2) + service[current_node]
    # dis = math.sqrt((coordi[current_node][0]-coordi[next_node][0])**2 + (coordi[current_node][1]-coordi[next_node][1])**2)
    print(f'{current_node} to {next_node} distance is {dis}')
    total_dis += dis

print(f'total distance of routes: {routes} is {total_dis}')